{"abi":[{"type":"function","name":"zkRegisterContract","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"evmBytecodeHash","type":"bytes32","internalType":"bytes32"},{"name":"evmDeployedBytecode","type":"bytes","internalType":"bytes"},{"name":"evmBytecode","type":"bytes","internalType":"bytes"},{"name":"zkBytecodeHash","type":"bytes32","internalType":"bytes32"},{"name":"zkDeployedBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"zkUseFactoryDep","inputs":[{"name":"contractName","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"zkUsePaymaster","inputs":[{"name":"paymaster","type":"address","internalType":"address"},{"name":"input","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"zkVm","inputs":[{"name":"enable","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"zkVmSkip","inputs":[],"outputs":[],"stateMutability":"pure"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"zkRegisterContract(string,bytes32,bytes,bytes,bytes32,bytes)":"428cb039","zkUseFactoryDep(string)":"d0a87595","zkUsePaymaster(address,bytes)":"2800ccd8","zkVm(bool)":"9d7804fe","zkVmSkip()":"99c48bb9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"evmBytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"evmDeployedBytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"evmBytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"zkBytecodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"zkDeployedBytecode\",\"type\":\"bytes\"}],\"name\":\"zkRegisterContract\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"zkUseFactoryDep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"input\",\"type\":\"bytes\"}],\"name\":\"zkUsePaymaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"zkVm\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkVmSkip\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"zkRegisterContract(string,bytes32,bytes,bytes,bytes32,bytes)\":{\"notice\":\"Registers bytecodes for ZK-VM for transact/call and create instructions.\"},\"zkUseFactoryDep(string)\":{\"notice\":\"Mark a contract as a factory dependency.\"},\"zkUsePaymaster(address,bytes)\":{\"notice\":\"Use a paymaster for the next ZK-VM call.\"},\"zkVm(bool)\":{\"notice\":\"Enables/Disables use ZK-VM usage for transact/call and create instructions.\"},\"zkVmSkip()\":{\"notice\":\"When running in zkEVM context, skips the next CREATE or CALL, executing it on the EVM instead. All `CREATE`s executed within this skip, will automatically have `CALL`s to their target addresses executed in the EVM, and need not be marked with this cheatcode at every usage location.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-zksync-std/src/VmExt.sol\":\"VmExt\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":forge-zksync-std/=lib/forge-zksync-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/forge-zksync-std/src/VmExt.sol\":{\"keccak256\":\"0x9daf5f4f95ce17a2ab272ccf81a63e0e8d1a7a3a96c53dd0f20c01aebcb92b43\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3c60959a6327873426e7321fc89137a58c1244074864f424475ee70fee832c16\",\"dweb:/ipfs/QmbHYTbfAWDy7YbB8gxZZLCvynye7Ucm2WFTajsw2gnJKg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"evmBytecodeHash","type":"bytes32"},{"internalType":"bytes","name":"evmDeployedBytecode","type":"bytes"},{"internalType":"bytes","name":"evmBytecode","type":"bytes"},{"internalType":"bytes32","name":"zkBytecodeHash","type":"bytes32"},{"internalType":"bytes","name":"zkDeployedBytecode","type":"bytes"}],"stateMutability":"pure","type":"function","name":"zkRegisterContract"},{"inputs":[{"internalType":"string","name":"contractName","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"zkUseFactoryDep"},{"inputs":[{"internalType":"address","name":"paymaster","type":"address"},{"internalType":"bytes","name":"input","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"zkUsePaymaster"},{"inputs":[{"internalType":"bool","name":"enable","type":"bool"}],"stateMutability":"pure","type":"function","name":"zkVm"},{"inputs":[],"stateMutability":"pure","type":"function","name":"zkVmSkip"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"zkRegisterContract(string,bytes32,bytes,bytes,bytes32,bytes)":{"notice":"Registers bytecodes for ZK-VM for transact/call and create instructions."},"zkUseFactoryDep(string)":{"notice":"Mark a contract as a factory dependency."},"zkUsePaymaster(address,bytes)":{"notice":"Use a paymaster for the next ZK-VM call."},"zkVm(bool)":{"notice":"Enables/Disables use ZK-VM usage for transact/call and create instructions."},"zkVmSkip()":{"notice":"When running in zkEVM context, skips the next CREATE or CALL, executing it on the EVM instead. All `CREATE`s executed within this skip, will automatically have `CALL`s to their target addresses executed in the EVM, and need not be marked with this cheatcode at every usage location."}},"version":1}},"settings":{"remappings":["@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","forge-zksync-std/=lib/forge-zksync-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-zksync-std/src/VmExt.sol":"VmExt"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/forge-zksync-std/src/VmExt.sol":{"keccak256":"0x9daf5f4f95ce17a2ab272ccf81a63e0e8d1a7a3a96c53dd0f20c01aebcb92b43","urls":["bzz-raw://3c60959a6327873426e7321fc89137a58c1244074864f424475ee70fee832c16","dweb:/ipfs/QmbHYTbfAWDy7YbB8gxZZLCvynye7Ucm2WFTajsw2gnJKg"],"license":"Apache-2.0"}},"version":1},"id":17}